name: Ninecraft build

on:
  - workflow_dispatch
  - push
    
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
    build:
      strategy:
          fail-fast: false
          matrix:
              target: [ ubuntu-latest ]
              arch: [i686,arm]
              include:
                - target: windows-latest
                  arch: i686
                  out: portable
      runs-on: ${{matrix.target}}
      permissions:
        contents: read 
      steps:
        - uses: actions/checkout@v4
          with:
            submodules: true

        - name: Set up Python
          id: python
          if: matrix.target == 'windows-latest'
          uses: actions/setup-python@v4
          with:
            python-version: '3.11'
            update-environment: false

        - name: Install Python dependencies
          if: matrix.target == 'windows-latest'
          run: |
            python -m pip install --upgrade pip
            pip install jinja2
        
        - name: Get Debian Architecture
          id: debian-arch
          if: ${{matrix.target == 'ubuntu-latest'}}
          run: |
            if [ "${{ matrix.arch }}" = "i686" ]; then
              echo "arch=i386" >> "$GITHUB_OUTPUT"
            fi
            if [ "${{ matrix.arch }}" = "arm" ]; then
              echo "arch=armhf" >> "$GITHUB_OUTPUT"
            fi

        - name: Setup APT ${{matrix.arch}}
          if: matrix.target == 'ubuntu-latest'
          run: |
            sudo dpkg --add-architecture ${{steps.debian.outputs.arch}}
            sudo apt update
            sudo apt install git make cmake unzip python3-jinja2 zenity libopenal-dev:${{steps.debian.outputs.arch}} libx11-dev:${{steps.debian.outputs.arch}} libxrandr-dev:${{steps.debian.outputs.arch}} libxinerama-dev:${{steps.debian.outputs.arch}} libxcursor-dev:${{steps.debian.outputs.arch}} libxi-dev:${{steps.debian.outputs.arch}} libgl-dev:${{steps.debian.outputs.arch}} libwayland-dev:${{steps.debian.outputs.arch}} libpulse-dev:${{steps.debian.outputs.arch}} libxkbcommon-dev:${{steps.debian.outputs.arch}} libegl-dev:${{steps.debian.outputs.arch}}
        - name: Install GCC-Multilib
          if: ${{matrix.target == 'ubuntu-latest' && matrix.arch == 'i686'}}
          run: sudo apt install gcc g++ gcc-multilib g++-multilib

        - name: Install GCC-gnueabihf
          if: ${{matrix.target == 'ubuntu-latest' && matrix.arch == 'arm'}}
          run: sudo apt install gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf


        - name: Build ${{matrix.arch}}-linux
          if: matrix.target != 'windows-latest'
          run: make build-${{matrix.arch}}

        - name: Build ${{matrix.arch}}-windows
          if: matrix.target == 'windows-latest'
          run:
            | 
            cmake -B ${{github.workspace}}/build -A Win32 -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DPYTHON_EXECUTABLE=${{steps.python.outputs.python-path}}
            cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}


       

        - name: Upload Wondows
          uses: actions/upload-artifact@v4
          if: ${{ matrix.target == 'windows-latest' }}
          with:
            name: ninecraft-${{matrix.arch}}-windows
            path: build/${{ env.BUILD_TYPE }}/ninecraft/ninecraft.exe

        - name: Upload Linux
          uses: actions/upload-artifact@v4
          if: ${{matrix.target != 'windows-latest'  }}
          with:
            name: ninecraft-${{matrix.arch}}-linux
            path: build${{matrix.arch}}/ninecraft/ninecraft
            
        - name: Build Deb
          if: ${{matrix.target == 'ubuntu-latest'  }}
          run: |
            mkdir -p pkgs/ninecraft/{usr/bin,usr/share/applications,DEBIAN}
            cp build-i686/ninecraft/ninecraft pkgs/ninecraft/usr/bin
            cp tools/extract.sh pkgs/ninecraft/usr/bin/ninecraft-extract
            cp pkgs/deb/control pkgs/ninecraft/DEBIAN
            dpkg-deb -b pkgs/ninecraft

        - name: Upload Deb
          if: ${{matrix.target == 'ubuntu-latest' }}
          uses: actions/upload-artifact@v4
          with:
            name: ninecraft-${{matrix.arch}}-linux.deb
            path: pkgs/ninecraft.deb