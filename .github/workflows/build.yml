name: Ninecraft build

on:
  - workflow_dispatch
  - push
    
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
    build:
      strategy:
          fail-fast: false
          matrix:
              os: [windows-latest,ubuntu-latest]
              arch: [i686,arm]
              out: [portable, deb, appimage]
              exclude:
                - os: windows
              include:
                - os: windows
                  out: portable
                  arch: i686
      runs-on: ${{matrix.os}}
      steps:
        - uses: actions/checkout@v4
          with:
            submodules: true
        - name: Set up Python
          if: matrix.os == 'windows-latest'
          uses: actions/setup-python@v4
          with:
            python-version: '3.11'
        - name: Install Python dependencies
          if: matrix.os == 'windows-latest'
          run: |
            python -m pip install --upgrade pip
            python -m pip install jinja2

        - name: Setup ${{matrix.arch}} build
          if: matrix.os == 'ubuntu-latest'
          run: |
            if [ "${{ matrix.arch }}" = "i686" ]; then
              DEB_ARCH=i386
            fi
            if [ "${{ matrix.arch }}" = "arm" ]; then
              DEB_ARCH=armf
            fi
            sudo dpkg --add-architecture ${DEB_ARCH}
            sudo apt update
            sudo apt install git make cmake unzip python3-jinja2 zenity libopenal-dev:${DEB_ARCH}libx11-dev:${DEB_ARCH} libxrandr-dev:${DEB_ARCH}libxinerama-dev:${DEB_ARCH} libxcursor-dev:${DEB_ARCH} libxi-dev:${DEB_ARCH libgl-dev:${DEB_ARCH} libwayland-dev:${DEB_ARCH} libpulse-dev:${DEB_ARCH} libxkbcommon-dev:${DEB_ARCH} libegl-dev:${DEB_ARCH}
        - name: Install GCC
          if: ${{matrix.os == 'ubuntu-latest' && matrix.arch == 'i686'}}
          run: sudo apt install gcc g++ gcc-multilib g++-multilib

        - name: Install GCC
          if: ${{matrix.os == 'ubuntu-latest' && matrix.arch == 'arm'}}
          run: sudo apt install gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf


        - name: Build ${{matrix.arch}}-${{matrix.os}}
          if: matrix.os != 'windows-latest'
          run: make build-${{matrix.arch}}

        - name: Build ${{matrix.arch}}-${{matrix.os}}
          if: matrix.os == 'windows-latest'
          run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}


        - name: Upload Artifact
          uses: actions/upload-artifact@v4
          if: matrix.os == 'windows'
          with:
            name: ninecraft-${{matrix.arch}}-${{matrix.os}}
            path: build/${{ env.BUILD_TYPE }}/ninecraft/ninecraft.exe

        - name: Upload Artifact
          uses: actions/upload-artifact@v4
          if: matrix.os != 'windows'
          with:
            name: ninecraft-${{matrix.arch}}-${{matrix.os}}
            path: build${{matrix.arch}}/ninecraft/ninecraft.exe