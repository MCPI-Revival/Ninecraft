# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: Ninecraft x86 linux build

on:
  workflow_dispatch:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
	  submodules: true

    - name: Install Dependencies
      run: |
        sudo dpkg --add-architecture i386
        sudo apt update
        sudo apt install git make cmake unzip python3-jinja2 zenity gcc g++ gcc-multilib g++-multilib libopenal-dev:i386 libx11-dev:i386 libxrandr-dev:i386 libxinerama-dev:i386 libxcursor-dev:i386 libxi-dev:i386 libgl-dev:i386 libwayland-dev:i386 libpulse-dev:i386 libxkbcommon-dev:i386 libegl-dev:i386

	# not needed because the about actions/checkout has that funtionality: https://github.com/actions/checkout?tab=readme-ov-file#usage
    # - name: Gather Submodules
    #   run: git submodule update --init
      
    - name: Build
      run: make build-i686

    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ninecraft
        path: build-i686/ninecraft/ninecraft

    - name: Build Deb
      run: |
        mkdir -p pkgs/ninecraft/usr/bin
        cp build-i686/ninecraft/ninecraft pkgs/ninecraft/usr/bin
        cp tools/extract.sh pkgs/ninecraft/usr/bin/ninecraft-extract
        dpkg-deb -b pkgs/ninecraft

    - name: Upload Deb
      uses: actions/upload-artifact@v4
      with:
        name: ninecraft.deb
        path: pkgs/ninecraft.deb

    - name: Build Appimage
      run: |
          mkdir -p pkgs/Ninecraft.AppDir/usr/bin
          cp build-i686/ninecraft/ninecraft pkgs/Ninecraft.AppDir/usr/bin
    - name: "Create AppImage"
      uses: AppImageCrafters/build-appimage@master
      with:
        recipe: "./pkgs/Ninecraft.AppDir"
